{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/2048.js","webpack:///./lib/board.js","webpack:///./lib/game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAA6B;;;AAG7B;AACA,iBAAiB,gDAAI;AACrB;AACA;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;;AAGA,mBAAmB,SAAS;AAC5B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7JA;AAAA;AAAA;AAA+B;;;AAGhB;AACf;AACA,qBAAqB,iDAAK;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/2048.js\");\n","import Game from './game.js';\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let game = new Game();\n  game.setup();\n  game.play();\n});\n","export default class Board {\n  constructor() {\n    this.grid = [\n      [0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0]\n    ];\n    this.score = 0;\n    this.previousBoard = null;\n    this.position = [[]];\n    this.canvas = document.getElementById(\"canvas\");\n    this.context = this.canvas.getContext(\"2d\");\n    this.scoreTag = document.getElementById(\"score\");\n    this.colors = [\n      ['white', 'white', 'white', 'white'],\n      ['white', 'white', 'white', 'white'],\n      ['white', 'white', 'white', 'white'],\n      ['white', 'white', 'white', 'white']\n    ];\n  }\n\n  addNumber() {\n    let unfilled = [];\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        if (this.grid[i][j] === 0) {\n          unfilled.push({x: i, y: j});\n        }\n      }\n    }\n    let idx = unfilled[Math.floor(Math.random() * unfilled.length)];\n    this.grid[idx.x][idx.y] = Math.floor(Math.random() * 5) > 2 ? 4 : 2;\n  }\n\n  slide(row) {\n    const arr = row.filter(value => value);\n    const unfilled = Array(4 - arr.length).fill(0);\n    const newArr = unfilled.concat(arr);\n    return newArr;\n  }\n\n  combine(row, row_pos) {\n    for (var i = 3; i > 0; i--) {\n      if (row[i] === row[i - 1]) {\n        row[i] = row[i] * 2;\n        row[i - 1] = 0;\n        this.score += row[i];\n      }\n    }\n    return row;\n  }\n\n  inverse() {\n    let newGrid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]\n    ];\n\n    for (var i = 0; i < 4; i++) {\n      for (var j = 0; j < 4; j++) {\n        newGrid[i][j] = this.grid[j][i];\n      }\n    }\n    return newGrid;\n  }\n\n  reverse() {\n    for (let i = 0; i < this.grid.length; i++) {\n      this.grid[i].reverse();\n    }\n  }\n\n  prevBoard() {\n    let prevGrid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]\n    ];\n\n    for (var i = 0; i < 4; i++) {\n      for (var j = 0; j < 4; j++) {\n        prevGrid[i][j] = this.grid[i][j];\n      }\n    }\n    return prevGrid;\n  }\n\n  fillNumbers() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.scoreTag.innerHTML = this.score;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        if (this.grid[i][j] !== 0) {\n          if (this.grid[i][j] === 8) {\n            this.colors[i][j] = '#CFD770';\n          } else if (this.grid[i][j] === 16) {\n            this.colors[i][j] = '#DA7E72';\n          } else if (this.grid[i][j] === 32) {\n            this.colors[i][j] = '#AF5B8B';\n          } else if (this.grid[i][j] === 64) {\n            this.colors[i][j] = '#765192';\n          } else if (this.grid[i][j] === 128) {\n            this.colors[i][j] = '#56A567';\n          } else if (this.grid[i][j] === 256) {\n            this.colors[i][j] = \"#DAD672\";\n          } else if (this.grid[i][j] === 512) {\n            this.colors[i][j] = \"#F7012D\";\n          } else if (this.grid[i][j] === 1024) {\n            this.colors[i][j] = \"#E70183\";\n          } else if (this.grid[i][j] === 2048) {\n            this.colors[i][j] = \"#FF7503\";\n          } else {\n            this.colors[i][j] = 'white';\n          }\n\n          this.context.font = \"35px arial\";\n          this.context.fillStyle = this.colors[i][j];\n          this.context.fillText(this.grid[i][j], i * 100 + (100 / 2), j * 100 + (100 / 2));\n        }\n      }\n    }\n\n    this.context.strokeStyle = \"white\";\n    this.context.stroke();\n  }\n\n  drawBoard() {\n    const p = 10;\n\n\n    const bw = 400;\n    const bh = 400;\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.scoreTag.innerHTML = this.score;\n    this.context.textAlign = \"center\";\n    this.context.textBaseline = \"top\";\n    for (var x = 0; x <= bw; x += 100) {\n        this.context.moveTo(2 + x + p, p);\n        this.context.lineTo(2 + x + p, bh + p);\n    }\n\n\n    for (var x = 0; x <= bh; x += 100) {\n        this.context.moveTo(p, 2 + x + p);\n        this.context.lineTo(bw + p, 2 + x + p);\n    }\n\n\n    this.context.strokeStyle = \"white\";\n    this.context.stroke();\n\n  }\n}\n","import Board from './board.js';\n\n\nexport default class Game {\n  constructor() {\n    this.board = new Board();\n\n    this.handleKey = this.handleKey.bind(this);\n    this.handlePress = this.handlePress.bind(this);\n    this.handleSwipe = this.handleSwipe.bind(this);\n    this.handleSwipeEnd = this.handleSwipeEnd.bind(this);\n    this.start = null;\n  }\n\n  setup() {\n    this.board.addNumber();\n    this.board.addNumber();\n    this.board.drawBoard();\n    this.board.fillNumbers();\n  }\n\n  handleKey(e) {\n\n    let flipped = false;\n    let inversed = false;\n    let pressed = false;\n    switch(e.code) {\n      case \"ArrowUp\":\n        this.board.reverse();\n        flipped = true;\n        pressed = true;\n        break;\n      case \"ArrowDown\":\n        pressed = true;\n        break;\n      case \"ArrowRight\":\n        this.board.grid = this.board.inverse();\n        inversed = true;\n        pressed = true;\n        break;\n      case \"ArrowLeft\":\n        this.board.grid = this.board.inverse();\n        this.board.reverse();\n        inversed = true;\n        flipped = true;\n        pressed = true;\n        break;\n    }\n\n    if (pressed) {\n      for (var i = 0; i < 4; i++) {\n        this.board.grid[i] = this.board.slide(this.board.grid[i]);\n        this.board.grid[i] = this.board.combine(this.board.grid[i], i);\n        this.board.grid[i] = this.board.slide(this.board.grid[i]);\n      }\n\n      if (flipped) {\n        this.board.reverse();\n      }\n\n      if (inversed) {\n        this.board.grid = this.board.inverse();\n      }\n      this.board.fillNumbers();\n      this.board.addNumber();\n    }\n  }\n\n  handlePress(e) {\n    e.preventDefault();\n    if (this.gameOver()) {\n      document.getElementById('game-over').style.opacity = 1;\n      document.getElementById('game-over').style.transition = \"all 2s\";\n      document.getElementById('game-over').innerHTML = \"Game Over!\";\n      document.getElementById('over').style.display = 'block';\n      this.removeKeyPress();\n    } else {\n      this.handleKey(e);\n    }\n  }\n\n  handleSwipe(e) {\n    e.preventDefault();\n    if(e.touches.length === 1){\n      //just one finger touched\n      this.start = e.touches.item(0).clientX;\n      this.startY = e.touches.item(0).clientY;\n    }\n  }\n\n  handleSwipeEnd(e) {\n    e.preventDefault();\n    var offset = 100;//at least 100px are a swipe\n    if(this.start){\n      // debugger\n      //the only finger that hit the screen left it\n      var end = event.changedTouches.item(0).clientX;\n      var endY = event.changedTouches.item(0).clientY;\n\n      let flipped = false;\n      let inversed = false;\n      let pressed = false;\n\n      if(end > this.start + offset){\n       //a left -> right swipe\n       this.board.grid = this.board.inverse();\n       inversed = true;\n       pressed = true;\n      }\n      if(end < this.start - offset ){\n       //a right -> left swipe\n       this.board.grid = this.board.inverse();\n       this.board.reverse();\n       inversed = true;\n       flipped = true;\n       pressed = true;\n      }\n      if(endY > this.startY + offset) {\n        pressed = true;\n      }\n      if(endY < this.startY - offset) {\n        this.board.reverse();\n        flipped = true;\n        pressed = true;\n      }\n\n      for (var i = 0; i < 4; i++) {\n        this.board.grid[i] = this.board.slide(this.board.grid[i]);\n        this.board.grid[i] = this.board.combine(this.board.grid[i], i);\n        this.board.grid[i] = this.board.slide(this.board.grid[i]);\n      }\n\n      if (flipped) {\n        this.board.reverse();\n      }\n\n      if (inversed) {\n        this.board.grid = this.board.inverse();\n      }\n      this.board.fillNumbers();\n      this.board.addNumber();\n\n    }\n  }\n\n  removeKeyPress() {\n    window.removeEventListener(\"keydown\", this.handlePress);\n  }\n\n  play() {\n    window.addEventListener(\"keydown\", this.handlePress);\n    window.addEventListener(\"touchstart\", this.handleSwipe);\n    window.addEventListener(\"touchend\", this.handleSwipeEnd);\n  }\n\n  gameOver() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        // debugger\n        if (this.board.grid[i][j] === 0) {\n          return false;\n        }\n        if (this.board.grid[i][j] === this.board.grid[i][j + 1] || this.board.inverse()[i][j] === this.board.inverse()[i][j + 1]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n}\n"],"sourceRoot":""}